{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "muup",
  "fileTypes": [
    "muup",
    "mp"
  ],
  "patterns": [
    {
      "include": "#scopesName"
    },
    {
      "include": "#templates"
    },
    {
      "include": "#props"
    },
    {
      "include": "#punctuations"
    },
    {
      "includes": "#numbers"
    }
  ],
  "repository": {
    "scopesName": {
      "patterns": [
        {
          "name": "keyword.control.muup",
          "match": "(- )((?i:widget|dashboard|container|props|js|style))"
        }
      ]
    },
    "templates": {
      "patterns": [
        {
          "begin": "(- )((?i:widget|dashboard|container))( \\()",
          "end": "(\\))",
          "patterns": [
            {
              "name": "constant.numeric.integer.muup",
              "match": "\\b(\\d+)\\b"
            }
          ]
        }
      ]
    },
    "props": {
      "patterns": [
        {
          "name": "entity.name.type.language.parens.muup",
          "begin": "(- )(?i:props)( \\()",
          "end": "(\\))",
          "patterns": [
            {
              "includes": "#property"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.integer.muup",
          "match": "\\b(\\d+)\\b"
        },
        {
          "name": "constant.numeric.decimal.muup",
          "match": "\\b(\\d+\\.\\d+)\\b"
        }
      ]
    },
    "punctuations": {
      "patterns": [
        {
          "name": "punctuation.separator.parameter.muup",
          "match": ","
        },
        {
          "name": "punctuation.curly.open.muup",
          "match": "\\{"
        },
        {
          "name": "punctuation.curly.close.muup",
          "match": "\\}"
        }
      ]
    },
    "strings": {
      "name": "string.muup",
      "begin": "\\<",
      "end": "\\>",
      "patterns": [
        {
          "name": "constant.character.escape.muup",
          "match": "\\\\."
        },
        {
          "name": "punctuation.term.muup",
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "meta.brace.curly.muup"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "meta.brace.curly.muup"
            }
          },
          "patterns": [
            {
              "include": "#terms"
            },
            {
              "include": "#numbers"
            },
            {
              "include": "#strings"
            }
          ]
        }
      ]
    },
    "property": {
      "patterns": [
        {
          "name": "keyword.control.conditional.muup",
          "match": "(\\b\\w+\\b)( =|=)"
        }
      ]
    }
  },
  "scopeName": "source.muup"
}